---
name: Build Kodi Base Image

on:
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * 0'
  push:
    branches:
      - main
    paths:
      - 'kodi-base/**'
      - '.github/workflows/build-kodi-base.yml'

env:
  IMAGE_NAME: "kodi-base"
  IMAGE_REGISTRY: "ghcr.io/${{ github.repository_owner }}"
  CCACHE_DIR: /tmp/.ccache

jobs:
  build-kodi-base:
    name: Build Kodi Base Image
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Prepare environment
        run: |
          echo "IMAGE_REGISTRY=${IMAGE_REGISTRY,,}" >> ${GITHUB_ENV}
          echo "IMAGE_NAME=${IMAGE_NAME,,}" >> ${GITHUB_ENV}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Check Kodi repository for updates
        id: check-updates
        run: |
          KODI_COMMIT=$(git ls-remote https://github.com/Blahkaey/xbmc testing | cut -f1)
          echo "kodi-commit=$KODI_COMMIT" >> $GITHUB_OUTPUT
          echo "kodi-commit-short=${KODI_COMMIT:0:8}" >> $GITHUB_OUTPUT
          echo "Current Kodi repository commit: $KODI_COMMIT"

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Cache mount for ccache
      - name: Cache ccache
        uses: actions/cache@v3
        id: ccache-cache
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ccache-kodi-${{ runner.os }}-${{ steps.check-updates.outputs.kodi-commit-short }}-${{ hashFiles('kodi-base/scripts/build-kodi.sh') }}
          restore-keys: |
            ccache-kodi-${{ runner.os }}-${{ steps.check-updates.outputs.kodi-commit-short }}-
            ccache-kodi-${{ runner.os }}-

      - name: Generate metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,prefix=sha-,format=short
            type=raw,value={{date 'YYYYMMDD'}}-{{sha}}
            type=raw,value=kodi-${{ steps.check-updates.outputs.kodi-commit-short }}

      - name: Build and Push Kodi Base
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ./kodi-base
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # Mount ccache directory
          build-args: |
            BUILDKIT_CONTEXT_KEEP_GIT_DIR=1

      - name: Show ccache statistics
        if: always()
        run: |
          docker run --rm -v ${{ env.CCACHE_DIR }}:/ccache \
            -e CCACHE_DIR=/ccache \
            registry.fedoraproject.org/fedora:42 \
            bash -c "dnf install -y ccache && ccache -s"

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3

      - name: Sign container image
        if: github.event_name != 'pull_request'
        env:
          COSIGN_EXPERIMENTAL: false
          COSIGN_PRIVATE_KEY: ${{ secrets.SIGNING_SECRET }}
        run: |
          cosign sign -y --key env://COSIGN_PRIVATE_KEY ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build.outputs.digest }}
